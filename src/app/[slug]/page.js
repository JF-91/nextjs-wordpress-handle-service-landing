import { gql } from "@apollo/client";
import client from "client";
import Head from "next/head";

export async function generateStaticParams() {
  try {
    // Realizar la consulta para obtener los slugs de las páginas
    const { data } = await client.query({
      query: gql`
        query GetPages {
          pages {
            nodes {
              slug
            }
          }
        }
      `,
    });

    // Retornar los slugs como parámetros
    return data?.pages.nodes.map((page) => ({
      slug: page?.slug,
    }));
  } catch (error) {
    console.error("Error fetching slugs:", error);
    return [];
  }
}

export default async function Page({ params }) {
  const { slug } = params;

  try {
    // Realizar la consulta para obtener los datos de la página específica por slug
    const { data } = await client.query({
      query: gql`
        query GetPageBySlug($slug: String!) {
          pageBy(uri: $slug) {
            title
            content
            blocks(postTemplate: false)
          }
        }
      `,
      variables: {
        slug: slug,
      },
    });

    if (!data.pageBy) {
      // Si no se encuentran datos para el slug, retorna un mensaje o un error
      return <div>Página no encontrada</div>;
    }

    // Renderizar la página con los datos obtenidos
    return (
      <div>
        <Head>
          <title>{data?.pageBy.title}</title>
          <meta name="description" content="Generated by create next app" />
        </Head>
        <h1>{data.pageBy.title}</h1>
        <div dangerouslySetInnerHTML={{ __html: data.pageBy.content }} />
        <ul>
          {data.pageBy.blocks.map((block) => (
            <li key={block.id}>{block.title}</li>
          ))}
        </ul>
        
      </div>
    );
  } catch (error) {
    console.error("Error fetching page data:", error);
    return <div>Error al cargar la página</div>;
  }
}
